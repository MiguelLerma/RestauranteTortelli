/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import JPAControl.EmpleadoJpaController;
import JPAControl.FacturaJpaController;
import JPAControl.ProductoJpaController;
import JPAControl.exceptions.IllegalOrphanException;
import JPAControl.exceptions.NonexistentEntityException;
import Log.EncriptarC;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.codec.binary.Base64;
import restaurantetorteli.Empleado;
import restaurantetorteli.Factura;
import restaurantetorteli.Producto;
import restaurantetorteli.ProductosFactura;
import restaurantetorteli.RenderTabla;


/**
 *
 * @author Alejandro
 */
public class Carta extends javax.swing.JFrame {

    
    String imagenGlobal = "";
        String[] items = new String[3];

   int idFactura = 0;
     ArrayList<Producto> listaProductos = new ArrayList<>();
   
     int idProductoSeleccionado = 0 ;
    /**
     * Creates new form Gerente
     */
    public Carta() {
        initComponents();
        
           
            
             items[0] = "Entradas";
            items[1] = "Fuertes";
            items[2] = "Postres";
        comboCategorias.setModel(new javax.swing.DefaultComboBoxModel(items));
        comboCategoriasM.setModel(new javax.swing.DefaultComboBoxModel(items));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ventanaCrearProducto = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        botonImagenUsuario = new javax.swing.JButton();
        imagenLabel = new javax.swing.JLabel();
        TFdescripcion = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        TFnombre = new javax.swing.JTextField();
        comboCategorias = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        TFid = new javax.swing.JTextField();
        TFprecio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ventanaModificarProducto = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        TFnombreM = new javax.swing.JTextField();
        TFprecioM = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        TFidM = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        botonImagenUsuario1 = new javax.swing.JButton();
        imagenLabel1 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        TFdescripcionF = new javax.swing.JTextField();
        comboCategoriasM = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        ventanaSeleccionarProducto = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProdcutos = new javax.swing.JTable();
        botonModificarEmpleado = new javax.swing.JButton();
        botonEliminarEmpleado = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        botonCrearEmpleado = new javax.swing.JButton();
        botonModificarEmple = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("ID");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 273, -1, -1));

        jLabel9.setText("Foto");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 378, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/button crear.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(218, 630, 88, 34));

        botonImagenUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/240_F_31912495_8klNKRbxUyWs2aDvp9yxfwmD4RGnBYr9.jpg"))); // NOI18N
        botonImagenUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImagenUsuarioActionPerformed(evt);
            }
        });
        jPanel1.add(botonImagenUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, 359, 108, 35));
        jPanel1.add(imagenLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 412, 200, 200));

        TFdescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFdescripcionActionPerformed(evt);
            }
        });
        jPanel1.add(TFdescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, 158, 199, 91));

        jLabel10.setText("Descripcion");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 195, -1, -1));

        jLabel11.setText("Categoria");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 125, -1, -1));

        jLabel13.setText("Nombre");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 86, -1, -1));

        TFnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFnombreActionPerformed(evt);
            }
        });
        jPanel1.add(TFnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, 80, 199, -1));

        comboCategorias.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(comboCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, 120, 199, -1));

        jLabel4.setText("Precio");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 319, -1, -1));

        TFid.setEditable(false);
        jPanel1.add(TFid, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, 267, 199, -1));
        jPanel1.add(TFprecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, 313, 199, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel2.setText("Crear Producto");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 6, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Verde-Luz-SÃ³lido-Pintura.jpg"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 670));

        javax.swing.GroupLayout ventanaCrearProductoLayout = new javax.swing.GroupLayout(ventanaCrearProducto.getContentPane());
        ventanaCrearProducto.getContentPane().setLayout(ventanaCrearProductoLayout);
        ventanaCrearProductoLayout.setHorizontalGroup(
            ventanaCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ventanaCrearProductoLayout.setVerticalGroup(
            ventanaCrearProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setText("Nombre");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 86, -1, -1));

        TFnombreM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFnombreMActionPerformed(evt);
            }
        });
        jPanel2.add(TFnombreM, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 80, 77, -1));

        TFprecioM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFprecioMActionPerformed(evt);
            }
        });
        jPanel2.add(TFprecioM, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 234, 77, -1));

        jLabel15.setText("Precio");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 240, -1, -1));

        jLabel16.setText("ID");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 280, -1, -1));

        TFidM.setEditable(false);
        TFidM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFidMActionPerformed(evt);
            }
        });
        jPanel2.add(TFidM, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 274, 77, -1));

        jLabel20.setText("Foto");
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 340, -1, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botonmodificar.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 580, 111, 39));

        botonImagenUsuario1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/240_F_31912495_8klNKRbxUyWs2aDvp9yxfwmD4RGnBYr9.jpg"))); // NOI18N
        botonImagenUsuario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImagenUsuario1ActionPerformed(evt);
            }
        });
        jPanel2.add(botonImagenUsuario1, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 320, 104, 36));
        jPanel2.add(imagenLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 368, 200, 200));

        jLabel22.setText("Categorias");
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 201, -1, -1));

        jLabel23.setText("Descripcion");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 144, -1, -1));

        TFdescripcionF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFdescripcionFActionPerformed(evt);
            }
        });
        jPanel2.add(TFdescripcionF, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 120, 173, 64));

        comboCategoriasM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(comboCategoriasM, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 196, 77, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel5.setText("Modificar Producto");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 6, -1, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Verde-Luz-SÃ³lido-Pintura.jpg"))); // NOI18N
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 630));

        javax.swing.GroupLayout ventanaModificarProductoLayout = new javax.swing.GroupLayout(ventanaModificarProducto.getContentPane());
        ventanaModificarProducto.getContentPane().setLayout(ventanaModificarProductoLayout);
        ventanaModificarProductoLayout.setHorizontalGroup(
            ventanaModificarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
            .addGroup(ventanaModificarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ventanaModificarProductoLayout.createSequentialGroup()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        ventanaModificarProductoLayout.setVerticalGroup(
            ventanaModificarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(ventanaModificarProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ventanaSeleccionarProducto.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaProdcutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaProdcutos);

        ventanaSeleccionarProducto.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 80, 375, 163));

        botonModificarEmpleado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/carta-logo - copia 2.png"))); // NOI18N
        botonModificarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarEmpleadoActionPerformed(evt);
            }
        });
        ventanaSeleccionarProducto.getContentPane().add(botonModificarEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 286, 121, 118));

        botonEliminarEmpleado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/carta-logo - copia 3.png"))); // NOI18N
        botonEliminarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarEmpleadoActionPerformed(evt);
            }
        });
        ventanaSeleccionarProducto.getContentPane().add(botonEliminarEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 286, 121, 118));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel6.setText("Seleccionar Producto");
        ventanaSeleccionarProducto.getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 6, -1, -1));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Verde-Luz-SÃ³lido-Pintura.jpg"))); // NOI18N
        ventanaSeleccionarProducto.getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 450));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Carta");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 6, -1, -1));

        botonCrearEmpleado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/carta-logo - copia 1.png"))); // NOI18N
        botonCrearEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearEmpleadoActionPerformed(evt);
            }
        });
        getContentPane().add(botonCrearEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 139, 121, 115));

        botonModificarEmple.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/carta-logo - copia 2.png"))); // NOI18N
        botonModificarEmple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarEmpleActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificarEmple, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 139, 121, 115));

        jButton3.setText("Atras");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Verde-Luz-SÃ³lido-Pintura.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCrearEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearEmpleadoActionPerformed
        // TODO add your handling code here:
        
          Date date = new Date();
            

        TFid.setText("88"+""+date.getHours()+""+date.getMinutes()+""+date.getSeconds());
      
        ventanaCrearProducto.setEnabled(true);
                ventanaCrearProducto.setVisible(true);
                ventanaCrearProducto.pack();
    }//GEN-LAST:event_botonCrearEmpleadoActionPerformed

    private void botonImagenUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImagenUsuarioActionPerformed
       
     JFileChooser chooser = new JFileChooser();
chooser.setCurrentDirectory(new java.io.File(".png"));
chooser.setDialogTitle("choosertitle");
chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
chooser.setAcceptAllFileFilterUsed(false);

if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
  System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
  System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
} else {
  System.out.println("No Selection ");
}
String base64 = "";
        
        try{
         java.io.File file= new java.io.File(chooser.getSelectedFile()+""); 
      java.io.FileInputStream fis= new java.io.FileInputStream(file); 
      byte[] buff= new byte[(int)file.length()]; 
      fis.read(buff); 
  // codificar base64 
       base64= new sun.misc.BASE64Encoder().encode(buff); 
      System.out.println("codificado:\n"+base64); 
      imagenGlobal = base64;
 // decodificar base64 
      byte[] bytes= new sun.misc.BASE64Decoder().decodeBuffer(base64); 
      System.out.println("decodificado:\n"+new String(bytes)); 
// TODO add your handling code here:
      
       
        byte[] btDataFile = new sun.misc.BASE64Decoder().decodeBuffer(base64);
BufferedImage image = ImageIO.read(new ByteArrayInputStream(btDataFile));
EncriptarC objeto = new EncriptarC();
objeto.getScaledImage(image,100,100);
imagenLabel.setIcon(new ImageIcon(objeto.getScaledImage(image,200,200)));


        }catch(Exception e){
            
            
        }
        
       
    }//GEN-LAST:event_botonImagenUsuarioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
        if(TFdescripcion.getText().toString().equalsIgnoreCase("")||TFnombre.getText().toString().equalsIgnoreCase("")||TFid.getText().toString().equalsIgnoreCase("")||TFprecio.getText().toString().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(null, "Faltan campos por llenar");
            return;
        
        }
        
        
        
        
        
        
        String catego = "";
        int iCargo = comboCategorias.getSelectedIndex();
        
        if(iCargo == 0){
            catego = items[0];
        }
        
        if(iCargo == 1){
            catego = items[1];
        }
        
        if(iCargo == 2){
            catego = items[2];
        }
        
        

        
        EncriptarC encriptador = new EncriptarC();
        
    
       EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestauranteTorteliPU");//PruebaJPAPU es el nombre de nuestra unidad de persistencia
        
       ProductoJpaController dao = new ProductoJpaController(emf);//Creamos un controlador de personal
        
        Producto producto = new Producto();
        
      
        
        
        try {
            
            if(imagenGlobal.equalsIgnoreCase("")){
                
                JOptionPane.showMessageDialog(null, "Seleccione una imagen");

                return;
            }
        producto.setNombreproducto(TFnombre.getText().toString());
        producto.setDescripcion(TFdescripcion.getText().toString());
        producto.setPrecio(Integer.parseInt(TFprecio.getText().toString()));
        producto.setProductoid(Integer.parseInt(TFid.getText().toString()));

        producto.setCategoria(catego);
     
        producto.setFoto(imagenGlobal);


        //JOptionPane.showMessageDialog(null, dao.findProducto(1).getNombreproducto());
        //System.out.println(dao.findProducto(1).getNombreproducto());
        
        
        
        dao.create(producto);
            JOptionPane.showMessageDialog(null, "Producto Creado");
                        ventanaCrearProducto.setVisible(false);

        }catch(NullPointerException m){
            m.printStackTrace();
             JOptionPane.showMessageDialog(null, "Faltan campos por llenar");
            return;
        
        } catch (NumberFormatException ex) {
            
            //Logger.getLogger(Tortteli.class.getName()).log(Level.SEVERE, null, ex);
            //System.out.println(ex);
           JOptionPane.showMessageDialog(null, "Se espera un numero en el Precio");

            ex.printStackTrace();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ya existe un empleado con este ID");

        }
        //Al ejecutar el mÃ©todo puede que salte una excepcion por lo que es importante lanzarla desde el main con throws Exception 
        emf.close();
            
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TFdescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFdescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFdescripcionActionPerformed

    private void TFnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFnombreActionPerformed

    private void botonModificarEmpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarEmpleActionPerformed

       
      
        ventanaSeleccionarProducto.setEnabled(true);
                ventanaSeleccionarProducto.setVisible(true);
                ventanaSeleccionarProducto.pack();
        try {
            llenarTablaProductosM(tablaProdcutos);
            
            
// TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Carta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonModificarEmpleActionPerformed

    private void botonModificarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarEmpleadoActionPerformed

        
        if(tablaProdcutos.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Seleccione un producto");
            return;
            
        }
        
        ventanaModificarProducto.setEnabled(true);
                ventanaModificarProducto.setVisible(true);
                ventanaModificarProducto.pack();
                
                
                            ventanaSeleccionarProducto.setVisible(false);

                
                
               
        idProductoSeleccionado = listaProductos.get(tablaProdcutos.getSelectedRow()).getProductoid();
        
        
        
        
       EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestauranteTorteliPU");//PruebaJPAPU es el nombre de nuestra unidad de persistencia
        
       ProductoJpaController dao = new ProductoJpaController(emf);//Creamos un controlador de personal
        
        Producto producto = new Producto();
        
        producto = dao.findProducto(idProductoSeleccionado);
                
                
        TFnombreM.setText(producto.getNombreproducto());
        TFdescripcionF.setText(producto.getDescripcion());
        TFprecioM.setText(producto.getPrecio()+"");
        TFidM.setText(producto.getProductoid()+"");
          
       
       
        for (int i = 0; i < items.length; i++) {
            if(producto.getCategoria().equals(items[i])){
                comboCategoriasM.setSelectedIndex(i);
            }
        }
        
        
        imagenGlobal = producto.getFoto().toString();
       
        byte[] btDataFile;
        try {
            btDataFile = new sun.misc.BASE64Decoder().decodeBuffer(producto.getFoto().toString());
        
BufferedImage image = ImageIO.read(new ByteArrayInputStream(btDataFile));
EncriptarC objeto = new EncriptarC();
objeto.getScaledImage(image,100,100);
imagenLabel1.setIcon(new ImageIcon(objeto.getScaledImage(image,200,200)));

      
              } catch (IOException ex) {
            Logger.getLogger(Carta.class.getName()).log(Level.SEVERE, null, ex);
        }  
// TODO add your handling code here:  
// TODO add your handling code here:
    }//GEN-LAST:event_botonModificarEmpleadoActionPerformed

    private void botonEliminarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarEmpleadoActionPerformed

         if(tablaProdcutos.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Seleccione un producto");
            return;
            
        }
        
         EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestauranteTorteliPU");//PruebaJPAPU es el nombre de nuestra unidad de persistencia

        ProductoJpaController dao = new ProductoJpaController(emf);//Creamos un controlador de personal

        
        try {
            idProductoSeleccionado = listaProductos.get(tablaProdcutos.getSelectedRow()).getProductoid();
            dao.destroy(idProductoSeleccionado);
            JOptionPane.showMessageDialog(null, "Producto eliminado con exito");
             try {
                 llenarTablaProductosM(tablaProdcutos);
             } catch (IOException ex) {
                 Logger.getLogger(Carta.class.getName()).log(Level.SEVERE, null, ex);
             }
        } catch (IllegalOrphanException ex) {
            Logger.getLogger(Carta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(Carta.class.getName()).log(Level.SEVERE, null, ex);
        }
                
                


    }//GEN-LAST:event_botonEliminarEmpleadoActionPerformed

    private void TFdescripcionFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFdescripcionFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFdescripcionFActionPerformed

    private void botonImagenUsuario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImagenUsuario1ActionPerformed

        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File(".png"));
        chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
            System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
        } else {
            System.out.println("No Selection ");
        }
        String base64 = "";

        try{
            java.io.File file= new java.io.File(chooser.getSelectedFile()+"");
            java.io.FileInputStream fis= new java.io.FileInputStream(file);
            byte[] buff= new byte[(int)file.length()];
            fis.read(buff);
            // codificar base64
            base64= new sun.misc.BASE64Encoder().encode(buff);
            System.out.println("codificado:\n"+base64);
            imagenGlobal = base64;
            // decodificar base64
            byte[] bytes= new sun.misc.BASE64Decoder().decodeBuffer(base64);
            System.out.println("decodificado:\n"+new String(bytes));
            // TODO add your handling code here:

            byte[] btDataFile = new sun.misc.BASE64Decoder().decodeBuffer(base64);
            BufferedImage image = ImageIO.read(new ByteArrayInputStream(btDataFile));
            EncriptarC objeto = new EncriptarC();
            objeto.getScaledImage(image,100,100);
            imagenLabel1.setIcon(new ImageIcon(objeto.getScaledImage(image,200,200)));

        }catch(Exception e){

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_botonImagenUsuario1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 
        
        if(TFdescripcionF.getText().toString().equalsIgnoreCase("")||TFnombreM.getText().toString().equalsIgnoreCase("")||TFidM.getText().toString().equalsIgnoreCase("")||TFprecioM.getText().toString().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(null, "Faltan campos por llenar");
            return;
        
        }
        
        
        
        
        
        
        String catego = "";
        int iCargo = comboCategoriasM.getSelectedIndex();
        
        if(iCargo == 0){
            catego = items[0];
        }
        
        if(iCargo == 1){
            catego = items[1];
        }
        
        if(iCargo == 2){
            catego = items[2];
        }
        
        

        
        EncriptarC encriptador = new EncriptarC();
        
    
       EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestauranteTorteliPU");//PruebaJPAPU es el nombre de nuestra unidad de persistencia
        
       ProductoJpaController dao = new ProductoJpaController(emf);//Creamos un controlador de personal
        
        Producto producto = new Producto();
        
      
        
        producto = dao.findProducto(idProductoSeleccionado);
        
        try {
            
            if(imagenGlobal.equalsIgnoreCase("")){
                
                JOptionPane.showMessageDialog(null, "Seleccione una imagen");

                return;
            }
        producto.setNombreproducto(TFnombreM.getText().toString());
        producto.setDescripcion(TFdescripcionF.getText().toString());
        producto.setPrecio(Integer.parseInt(TFprecioM.getText().toString()));
        producto.setProductoid(Integer.parseInt(TFidM.getText().toString()));

        producto.setCategoria(catego);
     
        producto.setFoto(imagenGlobal);


        //JOptionPane.showMessageDialog(null, dao.findProducto(1).getNombreproducto());
        //System.out.println(dao.findProducto(1).getNombreproducto());
        
        
        
        dao.edit(producto);
            JOptionPane.showMessageDialog(null, "Producto Modificado");
            ventanaModificarProducto.setVisible(false);

        }catch(NullPointerException m){
            m.printStackTrace();
            JOptionPane.showMessageDialog(null, "Faltan campos por llenar");
            return;

        } catch (NumberFormatException ex) {

            //Logger.getLogger(Tortteli.class.getName()).log(Level.SEVERE, null, ex);
            //System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Se espera un numero en el precio");

            ex.printStackTrace();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ya existe un producto con este ID");

        }
        //Al ejecutar el mÃ©todo puede que salte una excepcion por lo que es importante lanzarla desde el main con throws Exception
        emf.close();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TFidMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFidMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFidMActionPerformed

    private void TFprecioMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFprecioMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFprecioMActionPerformed

    private void TFnombreMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFnombreMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFnombreMActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      
        
        this.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    
    
    
public void llenarTablaProductosM(JTable tabla) throws IOException{
    
     
             listaProductos.clear();
    
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestauranteTorteliPU");//PruebaJPAPU es el nombre de nuestra unidad de persistencia
           
            ProductoJpaController produJPA = new ProductoJpaController(emf);
            
            
           List<Producto> listaProductosBuscados = produJPA.findProductoEntities();

            
           for (int i = 0; i < listaProductosBuscados.size(); i++) {
               
              
               listaProductos.add(listaProductosBuscados.get(i));
               
               
        }
           
    
    
    
    
    
           Object listaItems[][]  = new Object[listaProductos.size()][3];
          
          
      
          
          
           int precioAcum = 0;
          
        for (int i = 0; i < listaProductos.size(); i++) {
            
             
            listaItems[i][0] = listaProductos.get(i).getNombreproducto();
            listaItems[i][1] = listaProductos.get(i).getPrecio();
            listaItems[i][2] = listaProductos.get(i).getDescripcion();
           
            
        }
        
       
        String columna[] = new String[] {"Nombre", "Precio", "Descripcion"};
        emf.close();
        
        tabla.setDefaultRenderer(Object.class,new RenderTabla());
        
        
        
        DefaultTableModel modelo = new DefaultTableModel(listaItems, columna);
        
       
        tabla.setModel(modelo);


    
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Carta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Carta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Carta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Carta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Carta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TFdescripcion;
    private javax.swing.JTextField TFdescripcionF;
    private javax.swing.JTextField TFid;
    private javax.swing.JTextField TFidM;
    private javax.swing.JTextField TFnombre;
    private javax.swing.JTextField TFnombreM;
    private javax.swing.JTextField TFprecio;
    private javax.swing.JTextField TFprecioM;
    private javax.swing.JButton botonCrearEmpleado;
    private javax.swing.JButton botonEliminarEmpleado;
    private javax.swing.JButton botonImagenUsuario;
    private javax.swing.JButton botonImagenUsuario1;
    private javax.swing.JButton botonModificarEmple;
    private javax.swing.JButton botonModificarEmpleado;
    private javax.swing.JComboBox comboCategorias;
    private javax.swing.JComboBox comboCategoriasM;
    private javax.swing.JLabel imagenLabel;
    private javax.swing.JLabel imagenLabel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProdcutos;
    private javax.swing.JFrame ventanaCrearProducto;
    private javax.swing.JFrame ventanaModificarProducto;
    private javax.swing.JFrame ventanaSeleccionarProducto;
    // End of variables declaration//GEN-END:variables
}
