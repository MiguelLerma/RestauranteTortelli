/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import JPAControl.EmpleadoJpaController;
import JPAControl.FacturaJpaController;
import JPAControl.MesaJpaController;
import JPAControl.PagoFacturaJpaController;
import JPAControl.PagoJpaController;
import JPAControl.PedidoJpaController;
import JPAControl.ProductoJpaController;
import JPAControl.ProductoPedidoJpaController;
import JPAControl.ProductosFacturaJpaController;
import JPAControl.exceptions.NonexistentEntityException;
import Log.EncriptarC;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import restaurantetorteli.Empleado;
import restaurantetorteli.Factura;
import restaurantetorteli.Pago;
import restaurantetorteli.PagoFactura;
import restaurantetorteli.Pedido;
import restaurantetorteli.Producto;
import restaurantetorteli.ProductoPedido;
import restaurantetorteli.ProductoPedidoPK;
import restaurantetorteli.ProductosFactura;
import restaurantetorteli.ProductosFacturaPK;
import restaurantetorteli.RenderTabla;

/**
 *
 * @author Alejandro
 */
public class CrearFactura extends javax.swing.JFrame {

    int idPedido = 0;
     ArrayList<Producto> listaProductosSeleccionados = new ArrayList<>();
             ArrayList<Integer> listaCantidades = new ArrayList<>();

             ArrayList<Pedido> listaPedidos = new ArrayList<>();
            
             boolean crear = true;
               Factura factura = new Factura();

    /**
     * Creates new form CrearFactura
     */
    public CrearFactura() {
        initComponents();
        TFpagadoTotal.setText("0");
        try {
            llenarTablaPedidos(tablaPedidos);
        } catch (IOException ex) {
            Logger.getLogger(CrearFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ventanaCrearFactura = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaProductosFactura = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        TFtotalFactura = new javax.swing.JTextField();
        botonPagoEfectivo = new javax.swing.JButton();
        botonPagoTarjeta = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        TFpagadoTotal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TFiva = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TFpropina = new javax.swing.JTextField();
        TFcedula = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        TFidFactura = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        ventanaPagoEfectivo = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        TFefectivoIngresado = new javax.swing.JTextField();
        botonDevuelta = new javax.swing.JButton();
        botonTerminarPagoEfectivo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        TFdevuelta = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        TFcuantoDeseaPagar = new javax.swing.JTextField();
        Icono = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        ventanaPagoTarjeta = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        TFCuantoPagarTarjeta = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        TFnumeroTarjeta = new javax.swing.JTextField();
        botonPagarTarjeta = new javax.swing.JButton();
        TFnumeroTarjeta1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        TFnumeroTarjeta2 = new javax.swing.JTextField();
        Icono2 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPedidos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaProductosFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaProductosFactura);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 63, 404, 139));

        jLabel2.setText("Total");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 313, -1, -1));

        TFtotalFactura.setEditable(false);
        jPanel2.add(TFtotalFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 307, 93, -1));

        botonPagoEfectivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Solo-efectivo.jpg"))); // NOI18N
        botonPagoEfectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPagoEfectivoActionPerformed(evt);
            }
        });
        jPanel2.add(botonPagoEfectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 375, 124, 124));

        botonPagoTarjeta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/carduse_card_payment_5122.jpg"))); // NOI18N
        botonPagoTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPagoTarjetaActionPerformed(evt);
            }
        });
        jPanel2.add(botonPagoTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 375, 124, 124));

        jLabel3.setText("Pago Total");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 544, -1, -1));

        TFpagadoTotal.setEditable(false);
        jPanel2.add(TFpagadoTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 538, 75, -1));

        jLabel4.setText("IVA");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 273, -1, -1));

        TFiva.setEditable(false);
        jPanel2.add(TFiva, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 267, 81, -1));

        jLabel5.setText("Cedula");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 214, -1, -1));

        jLabel6.setText("Propina");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 273, -1, -1));

        TFpropina.setEditable(false);
        jPanel2.add(TFpropina, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 267, 91, -1));
        jPanel2.add(TFcedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 208, 81, -1));

        jLabel10.setText("ID Factura");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 12, -1, -1));

        TFidFactura.setEditable(false);
        TFidFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFidFacturaActionPerformed(evt);
            }
        });
        jPanel2.add(TFidFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 6, 135, -1));

        jLabel15.setText("Tipos de Pago:");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 341, -1, -1));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Verde-Luz-SÃ³lido-Pintura.jpg"))); // NOI18N
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 600));

        javax.swing.GroupLayout ventanaCrearFacturaLayout = new javax.swing.GroupLayout(ventanaCrearFactura.getContentPane());
        ventanaCrearFactura.getContentPane().setLayout(ventanaCrearFacturaLayout);
        ventanaCrearFacturaLayout.setHorizontalGroup(
            ventanaCrearFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventanaCrearFacturaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ventanaCrearFacturaLayout.setVerticalGroup(
            ventanaCrearFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventanaCrearFacturaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setText("Valor en efectivo");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, -1, -1));

        TFefectivoIngresado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFefectivoIngresadoActionPerformed(evt);
            }
        });
        jPanel1.add(TFefectivoIngresado, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, 118, -1));

        botonDevuelta.setText("Calcular devuelta");
        botonDevuelta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDevueltaActionPerformed(evt);
            }
        });
        jPanel1.add(botonDevuelta, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, -1, -1));

        botonTerminarPagoEfectivo.setText("Terminar Pago");
        botonTerminarPagoEfectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTerminarPagoEfectivoActionPerformed(evt);
            }
        });
        jPanel1.add(botonTerminarPagoEfectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, -1, -1));

        jLabel8.setText("Debe devolver");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, -1, -1));

        TFdevuelta.setEditable(false);
        jPanel1.add(TFdevuelta, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, 118, -1));

        jLabel9.setText("Cuanto desea pagar?");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, -1, -1));

        TFcuantoDeseaPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFcuantoDeseaPagarActionPerformed(evt);
            }
        });
        jPanel1.add(TFcuantoDeseaPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 118, -1));

        Icono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/pago-en-efectivo-2 - copia.png"))); // NOI18N
        jPanel1.add(Icono, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Verde-Luz-SÃ³lido-Pintura.jpg"))); // NOI18N
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 400));

        javax.swing.GroupLayout ventanaPagoEfectivoLayout = new javax.swing.GroupLayout(ventanaPagoEfectivo.getContentPane());
        ventanaPagoEfectivo.getContentPane().setLayout(ventanaPagoEfectivoLayout);
        ventanaPagoEfectivoLayout.setHorizontalGroup(
            ventanaPagoEfectivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ventanaPagoEfectivoLayout.setVerticalGroup(
            ventanaPagoEfectivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TFCuantoPagarTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFCuantoPagarTarjetaActionPerformed(evt);
            }
        });
        jPanel4.add(TFCuantoPagarTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 309, 96, -1));

        jLabel11.setText("Valor a pagar");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 314, -1, 18));

        jLabel12.setText("CVV");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 229, -1, -1));
        jPanel4.add(TFnumeroTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 223, 96, -1));

        botonPagarTarjeta.setText("Pagar");
        botonPagarTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPagarTarjetaActionPerformed(evt);
            }
        });
        jPanel4.add(botonPagarTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 368, -1, -1));

        TFnumeroTarjeta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFnumeroTarjeta1ActionPerformed(evt);
            }
        });
        jPanel4.add(TFnumeroTarjeta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 177, 96, -1));

        jLabel13.setText("Numero Tarjeta");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 183, -1, -1));

        jLabel14.setText("Fecha Vencimiento");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 275, -1, -1));
        jPanel4.add(TFnumeroTarjeta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 269, 96, -1));

        Icono2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/tarjetas.jpg"))); // NOI18N
        jPanel4.add(Icono2, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 6, -1, -1));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Verde-Luz-SÃ³lido-Pintura.jpg"))); // NOI18N
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 430));

        javax.swing.GroupLayout ventanaPagoTarjetaLayout = new javax.swing.GroupLayout(ventanaPagoTarjeta.getContentPane());
        ventanaPagoTarjeta.getContentPane().setLayout(ventanaPagoTarjetaLayout);
        ventanaPagoTarjetaLayout.setHorizontalGroup(
            ventanaPagoTarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ventanaPagoTarjetaLayout.setVerticalGroup(
            ventanaPagoTarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaPedidos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 290));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/factura - copia.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 350, 120, 110));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Seleccione un pedido");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Verde-Luz-SÃ³lido-Pintura.jpg"))); // NOI18N
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TFefectivoIngresadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFefectivoIngresadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFefectivoIngresadoActionPerformed

    private void botonTerminarPagoEfectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTerminarPagoEfectivoActionPerformed
    
         EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestauranteTorteliPU");//PruebaJPAPU es el nombre de nuestra unidad de persistencia
            
            FacturaJpaController factu = new FacturaJpaController(emf);//Creamos un controlador de personal
      
       
        
        
        if(TFdevuelta.getText().toString().equalsIgnoreCase("")){
            
             JOptionPane.showMessageDialog(null, "Debe calcular la devuelta primero");

            return;
        }
        
        if((Double.parseDouble(TFtotalFactura.getText().toString())-Double.parseDouble(TFpagadoTotal.getText().toString())) < Double.parseDouble(TFcuantoDeseaPagar.getText().toString())){
            
           JOptionPane.showMessageDialog(null, "El valor que desea pagar debe de ser menor o igual que el total de la factura");

           TFcuantoDeseaPagar.setText("");
           TFdevuelta.setText("");
           TFefectivoIngresado.setText("");
            return;
        }
        
        double pagado = Double.parseDouble(TFpagadoTotal.getText().toString())+Double.parseDouble(TFcuantoDeseaPagar.getText().toString());
        
        
        
                 Date date = new Date();

            
            PagoJpaController dao = new PagoJpaController(emf);//Creamos un controlador de personal
            Pago controPago = new Pago();
            
           
            controPago = dao.findPago(1);
            
       
        
         PagoFacturaJpaController pagoFacJPA = new PagoFacturaJpaController(emf);//Creamos un controlador de personal
         PagoFactura pagoFactura = new PagoFactura();
           

         pagoFactura.setId(Integer.parseInt("11"+""+date.getHours()+""+date.getMinutes()+""+date.getSeconds()));
            
            
         pagoFactura.setFacturaFacturaid(factura);
         pagoFactura.setPagoIdPago(controPago);
         
         
            Double d = new Double(Double.parseDouble(TFcuantoDeseaPagar.getText().toString()));
            int i = d.intValue();
           
         pagoFactura.setValorPago(i);
                
        try {
            pagoFacJPA.create(pagoFactura);
        } catch (Exception ex) {
            Logger.getLogger(CrearFactura.class.getName()).log(Level.SEVERE, null, ex);
        }

     
        

            
            
            
            
            
            
            
            
            

        
        
        
        TFpagadoTotal.setText(Double.toString(pagado));
        
        
         if(Double.parseDouble(TFtotalFactura.getText().toString())==  Double.parseDouble(TFpagadoTotal.getText().toString())){
                
                factura = factu.findFactura(Integer.parseInt(TFidFactura.getText().toString()));
                factura.setEstadofactura("Cancelada");
             try {
                 factu.edit(factura);
                 JOptionPane.showMessageDialog(null, "Factura pagada en su totalidad");

                 ventanaCrearFactura.setVisible(false);
                 this.setVisible(false);
             } catch (NonexistentEntityException ex) {
                 Logger.getLogger(CrearFactura.class.getName()).log(Level.SEVERE, null, ex);
             } catch (Exception ex) {
                 Logger.getLogger(CrearFactura.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
         
                 ventanaPagoEfectivo.setVisible(false);

            emf.close();

// TODO add your handling code here:
    }//GEN-LAST:event_botonTerminarPagoEfectivoActionPerformed

    private void botonDevueltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDevueltaActionPerformed
        // TODO add your handling code here:
        
        
        
        try {
            
            if(Double.parseDouble(TFcuantoDeseaPagar.getText().toString()) > Double.parseDouble(TFefectivoIngresado.getText().toString())){
            
           JOptionPane.showMessageDialog(null, "El efectivo ingresado es menor a lo que desea pagar");

            return;
        }
                    TFdevuelta.setText(Integer.toString(Integer.parseInt(TFefectivoIngresado.getText())-Integer.parseInt(TFcuantoDeseaPagar.getText())));

        } catch (NullPointerException e) {
            
            JOptionPane.showMessageDialog(null, "Debe de ingresar valores");
        }catch (NumberFormatException r) {
            
            JOptionPane.showMessageDialog(null, "Los valores deben de ser numeros");
        }
    }//GEN-LAST:event_botonDevueltaActionPerformed

    private void botonPagoEfectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPagoEfectivoActionPerformed

      
           
            try {
                crearFactura(1);
            } catch (Exception ex) {
                Logger.getLogger(CrearFactura.class.getName()).log(Level.SEVERE, null, ex);
            }
            
    
        
       
// TODO add your handling code here:
    }//GEN-LAST:event_botonPagoEfectivoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        this.setVisible(false);
        idPedido = listaPedidos.get(tablaPedidos.getSelectedRow()).getIdpedido();

        
        Date date = new Date();

        TFidFactura.setText(77+""+date.getHours()+""+date.getMinutes()+""+date.getSeconds());
        
        
        try {
            llenarTablaProductos(tablaProductosFactura);
        } catch (IOException ex) {
            Logger.getLogger(CrearFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ventanaCrearFactura.setEnabled(true);
        ventanaCrearFactura.setVisible(true);
        ventanaCrearFactura.pack();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TFidFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFidFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFidFacturaActionPerformed

    private void botonPagoTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPagoTarjetaActionPerformed

          try {
                crearFactura(2);
            } catch (Exception ex) {
                Logger.getLogger(CrearFactura.class.getName()).log(Level.SEVERE, null, ex);
            }

// TODO add your handling code here:
    }//GEN-LAST:event_botonPagoTarjetaActionPerformed

    private void TFCuantoPagarTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFCuantoPagarTarjetaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFCuantoPagarTarjetaActionPerformed

    private void TFnumeroTarjeta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFnumeroTarjeta1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFnumeroTarjeta1ActionPerformed

    private void botonPagarTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPagarTarjetaActionPerformed

        
   EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestauranteTorteliPU");//PruebaJPAPU es el nombre de nuestra unidad de persistencia
            
            FacturaJpaController factu = new FacturaJpaController(emf);//Creamos un controlador de personal
      
       

 if(TFCuantoPagarTarjeta.getText().toString().equalsIgnoreCase("")){
            
             JOptionPane.showMessageDialog(null, "Debe escribir un monto");

            return;
        }
        
        if((Double.parseDouble(TFtotalFactura.getText().toString())-Double.parseDouble(TFpagadoTotal.getText().toString())) < Double.parseDouble(TFCuantoPagarTarjeta.getText().toString())){
            
           JOptionPane.showMessageDialog(null, "El valor que desea pagar debe de ser menor o igual que el total de la factura");

           TFcuantoDeseaPagar.setText("");
           TFdevuelta.setText("");
           TFefectivoIngresado.setText("");
            return;
        }
        
        double pagado = Double.parseDouble(TFpagadoTotal.getText().toString())+Double.parseDouble(TFCuantoPagarTarjeta.getText().toString());
        
        
        
                 Date date = new Date();

            
            PagoJpaController dao = new PagoJpaController(emf);//Creamos un controlador de personal
            Pago controPago = new Pago();
            
           
            controPago = dao.findPago(2);
            
       
        
         PagoFacturaJpaController pagoFacJPA = new PagoFacturaJpaController(emf);//Creamos un controlador de personal
         PagoFactura pagoFactura = new PagoFactura();
           

         pagoFactura.setId(Integer.parseInt("22"+""+date.getHours()+""+date.getMinutes()+""+date.getSeconds()));
            
            
         pagoFactura.setFacturaFacturaid(factura);
         pagoFactura.setPagoIdPago(controPago);
         
         
            Double d = new Double(Double.parseDouble(TFCuantoPagarTarjeta.getText().toString()));
            int i = d.intValue();
           
         pagoFactura.setValorPago(i);
                
        try {
            pagoFacJPA.create(pagoFactura);
        } catch (Exception ex) {
            Logger.getLogger(CrearFactura.class.getName()).log(Level.SEVERE, null, ex);
        }

     
        

            
            
            
            
            
            
            
            
            

        
        
        
        TFpagadoTotal.setText(Double.toString(pagado));


        
          if(Double.parseDouble(TFtotalFactura.getText().toString())==  Double.parseDouble(TFpagadoTotal.getText().toString())){
                
                factura = factu.findFactura(Integer.parseInt(TFidFactura.getText().toString()));
                factura.setEstadofactura("Cancelada");
             try {
                 factu.edit(factura);
                 JOptionPane.showMessageDialog(null, "Factura pagada en su totalidad");
 ventanaCrearFactura.setVisible(false);
                 this.setVisible(false);
             } catch (NonexistentEntityException ex) {
                 Logger.getLogger(CrearFactura.class.getName()).log(Level.SEVERE, null, ex);
             } catch (Exception ex) {
                 Logger.getLogger(CrearFactura.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
                  ventanaPagoTarjeta.setVisible(false);

                      emf.close();

// TODO add your handling code here:
    }//GEN-LAST:event_botonPagarTarjetaActionPerformed

    private void TFcuantoDeseaPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFcuantoDeseaPagarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFcuantoDeseaPagarActionPerformed

    
    
    public void crearFactura(int tipoPago) throws Exception{
        
        
           
         EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestauranteTorteliPU");//PruebaJPAPU es el nombre de nuestra unidad de persistencia
            
            FacturaJpaController dao = new FacturaJpaController(emf);//Creamos un controlador de personal
      
        if(crear){
            
            
        if(TFcedula.getText().toString().equalsIgnoreCase("")){
            
                        JOptionPane.showMessageDialog(null, "Debe ingresar cedula cliente");

                        return;
            
        }
        
        if(tipoPago == 1){
            
              ventanaPagoEfectivo.setEnabled(true);
        ventanaPagoEfectivo.setVisible(true);
        ventanaPagoEfectivo.pack();
          
       
        }else{
              ventanaPagoTarjeta.setEnabled(true);
        ventanaPagoTarjeta.setVisible(true);
        ventanaPagoTarjeta.pack();
          
       
            
        }
        
       
        
           PedidoJpaController pedidoJPA = new PedidoJpaController(emf);//Creamos un controlador de personal

            ProductosFacturaJpaController productoFacturaJPA = new ProductosFacturaJpaController(emf);//Creamos un controlador de personal
            ProductosFactura productosFactura = new ProductosFactura();
            ProductosFacturaPK productosFacturaPK = new ProductosFacturaPK();
            
            factura.setCedulacliente(Integer.parseInt(TFcedula.getText().toString()));
            factura.setEstadofactura("Iniciada");
            factura.setFacturaid(Integer.parseInt(TFidFactura.getText()));
           // factura.setIva(Integer);
            factura.setPedidoIdpedido(pedidoJPA.findPedido(idPedido));
            
            Double d = new Double(Double.parseDouble(TFiva.getText().toString()));
            int i = d.intValue();
            
            factura.setIva(i);
            Date fecha = new Date();
             d = new Double(Double.parseDouble(TFtotalFactura.getText().toString()));
            i = d.intValue();
            
            factura.setTotalfactura(i);
            factura.setHorapago(fecha);
            factura.setFechafactura(fecha);
            
            
            
         
            
            dao.create(factura);
                crear = false;

            
            
                
                
                for (int j = 0; j < listaProductosSeleccionados.size(); j++) {
                    
                    
                       productosFacturaPK.setFacturaFacturaid(factura.getFacturaid());
                       productosFacturaPK.setIdProducto(listaProductosSeleccionados.get(j).getProductoid());
            productosFactura.setFactura(factura);
            productosFactura.setNombreProducto(listaProductosSeleccionados.get(j).getNombreproducto());
            productosFactura.setPrecioProducto(listaProductosSeleccionados.get(j).getPrecio());
            productosFactura.setCantidad(listaCantidades.get(j));
            productosFactura.setProductosFacturaPK(productosFacturaPK);
       
            productoFacturaJPA.create(productosFactura);
                
            }
                
                
                
                
            
            
            emf.close();
        }else{
            
           
            if(Double.parseDouble(TFtotalFactura.getText().toString())==  Double.parseDouble(TFpagadoTotal.getText().toString())){
                
                factura = dao.findFactura(Integer.parseInt(TFidFactura.getText().toString()));
                factura.setEstadofactura("Cancelada");
            dao.edit(factura);
                
            }else{
                
                            crear = false;

                if(tipoPago == 1){
            
              ventanaPagoEfectivo.setEnabled(true);
        ventanaPagoEfectivo.setVisible(true);
        ventanaPagoEfectivo.pack();
          
       
        }else{
              ventanaPagoTarjeta.setEnabled(true);
        ventanaPagoTarjeta.setVisible(true);
        ventanaPagoTarjeta.pack();
          
       
            
        }
            }
            
        }
        
        
        
    }
    
    
    
    
      
public void llenarTablaProductos(JTable tabla) throws IOException{
    
     
             listaCantidades.clear();
             listaProductosSeleccionados.clear();
    
       EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestauranteTorteliPU");//PruebaJPAPU es el nombre de nuestra unidad de persistencia
            
            PedidoJpaController dao = new PedidoJpaController(emf);//Creamos un controlador de personal
            ProductoJpaController controProdu = new ProductoJpaController(emf);//Creamos un controlador de personal
            MesaJpaController controMesa = new MesaJpaController(emf);
            ProductoPedidoJpaController produtoPedidoJPA = new ProductoPedidoJpaController(emf);
            ProductoPedido productoPedido = new  ProductoPedido();
            ProductoPedidoPK productoPedidoPK = new ProductoPedidoPK();
            
            Pedido pedido = new Pedido();
            Producto producto = new Producto();
            Empleado empleado = new Empleado();
           
            
            
           pedido = dao.findPedido(idPedido);
            
           List<ProductoPedido> listaProductos = produtoPedidoJPA.findProductoPedidoEntities();
           
            
           for (int i = 0; i < listaProductos.size(); i++) {
               
             if (listaProductos.get(i).getPedido().getIdpedido() == idPedido){
                 
                 listaProductosSeleccionados.add(controProdu.findProducto(listaProductos.get(i).getProducto().getProductoid()));
                 listaCantidades.add(listaProductos.get(i).getCantidad());
                 
             }
            
        }
           
    
    
    
    
    
           Object listaItems[][]  = new Object[listaProductosSeleccionados.size()][5];
          
          
      
          
          
           int precioAcum = 0;
          
        for (int i = 0; i < listaProductosSeleccionados.size(); i++) {
            
             
            listaItems[i][0] = listaProductosSeleccionados.get(i).getProductoid();
            listaItems[i][1] = listaProductosSeleccionados.get(i).getNombreproducto();
            listaItems[i][2] = listaProductosSeleccionados.get(i).getPrecio();
            listaItems[i][3] = listaProductosSeleccionados.get(i).getDescripcion();
            listaItems[i][4] = listaCantidades.get(i);
            
            precioAcum = precioAcum +(listaProductosSeleccionados.get(i).getPrecio()*listaCantidades.get(i));

            
        }
        
        double propina = precioAcum*0.1;
        double iva = precioAcum*0.19;
        TFiva.setText(""+iva);
        TFpropina.setText(""+propina);
        
        TFtotalFactura.setText(""+(precioAcum+iva+propina));
        String columna[] = new String[] {"ID", "Nombre", "Precio", "Descripcion","Cantidad"};
        emf.close();
        
        tabla.setDefaultRenderer(Object.class,new RenderTabla());
        
        
        
        DefaultTableModel modelo = new DefaultTableModel(listaItems, columna);
        
       
        tabla.setModel(modelo);


    
}



public void llenarTablaPedidos(JTable tabla) throws IOException{
    
     
             listaPedidos.clear();
    
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("RestauranteTorteliPU");//PruebaJPAPU es el nombre de nuestra unidad de persistencia
            
            PedidoJpaController dao = new PedidoJpaController(emf);//Creamos un controlador de personal
           
            Pedido pedido = new Pedido();
           
            FacturaJpaController factuJPA = new FacturaJpaController(emf);
            
            
            
           pedido = dao.findPedido(idPedido);
            
           List<Pedido> listaPedido = dao.findPedidoEntities();
           List<Factura> listaFactura = factuJPA.findFacturaEntities();

           boolean bandera = true;
            
           for (int i = 0; i < listaPedido.size(); i++) {
               
               for (int j = 0; j < listaFactura.size(); j++) {
                   
                   
                    if (listaPedido.get(i).getIdpedido() == listaFactura.get(j).getPedidoIdpedido().getIdpedido()){
                 
                  
                        bandera = false;
                        break;
             }
                  
               }
            
            
               if(bandera){
                   
                   listaPedidos.add(listaPedido.get(i));
                   
               }
               bandera = true;
        }
           
    
    
    
    
    
           Object listaItems[][]  = new Object[listaPedidos.size()][4];
          
          
      
          
          
           int precioAcum = 0;
          
        for (int i = 0; i < listaPedidos.size(); i++) {
            
             
            listaItems[i][0] = listaPedidos.get(i).getIdpedido();
            listaItems[i][1] = listaPedidos.get(i).getMesaNumeromesa().getNumeromesa();
            listaItems[i][2] = listaPedidos.get(i).getEmpleadoIdempleado().getNombre();
            listaItems[i][3] = listaPedidos.get(i).getHoraentrega().getHours()+":"+listaPedidos.get(i).getHoraentrega().getMinutes();
           
            
        }
        
       
        String columna[] = new String[] {"ID", "Mesa", "Empleado", "Hora "};
        emf.close();
        
        tabla.setDefaultRenderer(Object.class,new RenderTabla());
        
        
        
        DefaultTableModel modelo = new DefaultTableModel(listaItems, columna);
        
       
        tabla.setModel(modelo);


    
}

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearFactura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearFactura().setVisible(true);
            }
        });
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Icono;
    private javax.swing.JLabel Icono2;
    private javax.swing.JTextField TFCuantoPagarTarjeta;
    private javax.swing.JTextField TFcedula;
    private javax.swing.JTextField TFcuantoDeseaPagar;
    private javax.swing.JTextField TFdevuelta;
    private javax.swing.JTextField TFefectivoIngresado;
    private javax.swing.JTextField TFidFactura;
    private javax.swing.JTextField TFiva;
    private javax.swing.JTextField TFnumeroTarjeta;
    private javax.swing.JTextField TFnumeroTarjeta1;
    private javax.swing.JTextField TFnumeroTarjeta2;
    private javax.swing.JTextField TFpagadoTotal;
    private javax.swing.JTextField TFpropina;
    private javax.swing.JTextField TFtotalFactura;
    private javax.swing.JButton botonDevuelta;
    private javax.swing.JButton botonPagarTarjeta;
    private javax.swing.JButton botonPagoEfectivo;
    private javax.swing.JButton botonPagoTarjeta;
    private javax.swing.JButton botonTerminarPagoEfectivo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaPedidos;
    private javax.swing.JTable tablaProductosFactura;
    private javax.swing.JFrame ventanaCrearFactura;
    private javax.swing.JFrame ventanaPagoEfectivo;
    private javax.swing.JFrame ventanaPagoTarjeta;
    // End of variables declaration//GEN-END:variables
}
